version: 2
jobs:
  setup:
    working_directory: /go/src/github.com/segmentio/emissary
    docker:
      - image: segment/circleci-golang:1.11.0
    steps:
      - checkout
      - restore_cache:
          key: vendor-{{ checksum "Gopkg.lock" }}
      - run:
          name: Fetching Dependencies
          command: |
            go get -u github.com/golang/dep/cmd/dep
            dep ensure
      - save_cache:
          key: vendor-{{ checksum "Gopkg.lock" }}
          paths: [./vendor]
      - persist_to_workspace:
          root: .
          paths: [.]

  build:
    working_directory: /go/src/github.com/segmentio/emissary
    docker:
      - image: segment/circleci-golang:1.11.0
    steps:
      - setup_remote_docker: { reusable: true, docker_layer_caching: true }
      - attach_workspace: { at: . }
      - run:
          name: Building Emissary
          command: |
            branch=${CIRCLE_BRANCH:-master}
            commit=$(echo -n $CIRCLE_SHA1 | cut -c -7)
            version=${branch}/${commit}
            go build -ldflags "-X main.version=${CIRCLE_TAG:-$version}" ./cmd/emissary
          environment:
            CGO_ENABLED: 0
      - run:
          name: Building Docker Image
          command: |
            docker build -t emissary -f Dockerfile .
      - run:
          name: Snyk Setup
          command: curl -sL https://raw.githubusercontent.com/segmentio/snyk_helpers/master/initialization/snyk.sh | sh

  lint:
    working_directory: /go/src/github.com/segmentio/emissary
    docker:
      - image: segment/circleci-golang:1.10
    steps:
      - attach_workspace: { at: . }
      - run:
          name: Linting Source Code
          command: golint $(find . -type d -not -path '*/\.*' -not -path './vendor/*')

  vet:
    working_directory: /go/src/github.com/segmentio/emissary
    docker:
      - image: segment/circleci-golang:1.11.0
    steps:
      - attach_workspace: { at: . }
      - run:
          name: Vetting Source Code
          command: go vet .

  test:
    working_directory: /go/src/github.com/segmentio/emissary
    docker:
      - image: segment/circleci-golang:1.11.0
    steps:
      - attach_workspace: { at: . }
      - run:
          name: Running emissary package tests
          command: go test -v -race

workflows:
  version: 2
  run:
    jobs:
      - setup:
          filters:
            tags: { only: /.*/ }

      - build:
          requires: [setup]
          context: snyk
          filters:
            tags: { only: /.*/ }

      - lint:
          requires: [setup]

      - vet:
          requires: [setup]

      - test:
          requires: [setup]
          filters:
            tags: { only: /.*/ }
